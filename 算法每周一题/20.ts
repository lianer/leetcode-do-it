/**
算法第二十题    移除盒子
给出一些不同颜色的盒子，盒子的颜色由数字表示，即不同的数字表示不同的颜色。
你将经过若干轮操作去去掉盒子，直到所有的盒子都去掉为止。每一轮你可以移除具有相同颜色的连续 k 个盒子（k >= 1），
这样一轮之后你将得到 k*k 个积分。
当你将所有盒子都去掉之后，求你能获得的最大积分和。

示例：
输入：boxes = [1,3,2,2,2,3,4,3,1]
输出：23
解释：
[1, 3, 2, 2, 2, 3, 4, 3, 1]
----> [1, 3, 3, 4, 3, 1] (3*3=9 分)  移除掉了 3 个 2
----> [1, 3, 3, 3, 1] (1*1=1 分)  移除掉  1 个 4
----> [1, 1] (3*3=9 分) 移除掉  3 个 3
----> [] (2*2=4 分) 移除掉 2 个 1

提示：
1 <= boxes.length <= 100
1 <= boxes[i] <= 100

类似于玩祖玛时，控制青蛙消除一串相同珠子中一些不同颜色的珠子，然后比较获得最大积分。
举个例子：
RRGGRRBRRRR
比较莽的做法是直接将后面的除去：RRGGRRB+4*4
或者先消除中间碍事的：B + GG +RR RR RRR

可以考虑先采用穷举法 然后再去优化
*/

/**
 * @param {number[]} boxes
 * @return {number}
 */
var removeBoxes = function(boxes) {};

console.log(removeBoxes([1, 2, 1, 3]), 6);

console.log(removeBoxes([3, 3, 1, 2, 1, 2]), 10);

console.log(removeBoxes([1, 3, 2, 2, 2, 3, 4, 3, 1]), 23);

console.log(removeBoxes([1, 2, 4, 5, 5, 6, 6, 5, 5, 5, 7, 7]), 36);
